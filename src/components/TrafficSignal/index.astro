---

---

<form class="traffic-signal">
	<label class="bulb">
		<input
			name="bulb"
			type="radio"
			value="stop"
		/>
	</label>

	<label class="bulb">
		<input
			name="bulb"
			type="radio"
			value="caution"
		/>
	</label>

	<label class="bulb">
		<input
			name="bulb"
			type="radio"
			value="go"
		/>
	</label>
</form>

<div
	aria-live="assertive"
	id="alert"
>
	STOP
</div>

<style>
	:root {
		--amber: 83% 0.2 82.1; /* #feba00 */
		--amber-tinted: 91% 0.1 90; /* #fbdf93 */
		--green: 59% 0.3 142.5; /* #009800 */
		--green-tinted: 87% 0.3 142.5; /* #2bff26 */
		--red: 58% 0.2 30.1; /* #d73625 */
		--red-tinted: 68% 0.2 28; /* #fb594d */

		--gray-dark: 51% 0 0; /* #666666 */
		--gray-darker: 39% 0 0; /* #454545 */
		--gray-darkest: 25% 0 0; /* #222222 */

		--bulb-color-caution: radial-gradient(
			oklch(var(--amber-tinted)),
			oklch(var(--amber))
		);
		--bulb-color-go: radial-gradient(
			oklch(var(--green-tinted)),
			oklch(var(--green))
		);
		--bulb-color-stop: radial-gradient(
			oklch(var(--red-tinted)),
			oklch(var(--red))
		);

		--bulb-color-unlit: oklch(var(--gray-darker));
		--case-cover: oklch(var(--gray-darkest));
		--faceplate-color: oklch(var(--gray-dark));
		--rim-color: oklch(var(--gray-darkest));

		--bulb-diameter: 20vh;
		--bulb-spacing: 1vh;
	}

	.traffic-signal {
		align-items: center;
		background-color: var(--faceplate-color);
		border-radius: 0.75vh;
		border: 0.3vh solid var(--case-color);
		box-sizing: content-box;
		display: flex;
		flex-direction: column;
		gap: var(--bulb-spacing);
		height: calc(
			calc(var(--bulb-diameter) * 3) + calc(var(--bulb-spacing) * 6)
		);
		justify-content: space-between;
		padding-block: calc(var(--bulb-spacing) * 2);
		width: calc(var(--bulb-diameter) + calc(var(--bulb-spacing) * 4));
	}

	.traffic-signal .bulb {
		aspect-ratio: 1;
		background-color: var(--bulb-color-unlit);
		border-radius: 50%;
		border: 0.3vh solid var(--rim-color);
		box-sizing: border-box;
		display: flex;
		flex: 1;
		height: var(--bulb-diameter);
		max-height: var(--bulb-diameter);
		place-content: center;
	}

	.traffic-signal .bulb input[type="radio"] {
		opacity: 0;
	}

	.traffic-signal .bulb:has(input[value="stop"]:checked) {
		background: var(--bulb-color-stop);
	}

	.traffic-signal .bulb:has(input[value="caution"]:checked) {
		background: var(--bulb-color-caution);
	}

	.traffic-signal .bulb:has(input[value="go"]:checked) {
		background: var(--bulb-color-go);
	}

	#alert {
		max-height: 0;
		opacity: 0;
	}
</style>

<script>
	globalThis.addEventListener("DOMContentLoaded", () => {
		const GO_TIME_IN_MILLISECONDS = 2000
		const CAUTION_TIME_IN_MILLISECONDS = 1000
		const STOP_TIME_IN_MILLISECONDS = 3000

		const form = document.querySelector("form")
		const bulbs = form?.elements.namedItem("bulb")
		const alert = document.querySelector("#alert")

		function energizeSignal() {
			switch (bulbs?.value) {
				case "go":
					alert && (alert.innerText = "CAUTION")
					bulbs.value = "caution"

					setTimeout(energizeSignal, CAUTION_TIME_IN_MILLISECONDS)

					break
				case "caution":
					alert && (alert.innerText = "STOP")
					bulbs.value = "stop"

					setTimeout(energizeSignal, STOP_TIME_IN_MILLISECONDS)

					break
				default:
					alert && (alert.innerText = "GO")
					bulbs.value = "go"

					setTimeout(energizeSignal, GO_TIME_IN_MILLISECONDS)
			}
		}

		energizeSignal()
	})
</script>
